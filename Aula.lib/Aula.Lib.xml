<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Aula.Lib</name>
    </assembly>
    <members>
        <member name="T:Aula.Lib.Aula01.Exemplo01">
            <summary>
            Classe feita para aprender a calcular Margem de Lucro, Markup e Preço de Venda utilizando-se dos dois métodos de precificação anteriores
            </summary>
        </member>
        <member name="M:Aula.Lib.Aula01.Exemplo01.CalcularMarkup(System.Decimal,System.Decimal)">
            <summary>
            CalculaMarkup
            </summary>
            <param name="PC">Preço de Custo</param>
            <param name="PV">Preço de Venda</param>
            <returns>Retorna o Markup calculado</returns>
        </member>
        <member name="M:Aula.Lib.Aula01.Exemplo01.CalcularMargemDeLucro(System.Decimal,System.Decimal)">
            <summary>
            CalculaMargemDeLucro
            </summary>
            <param name="pc">Preço de Custo</param>
            <param name="pv">Preço de Venda</param>
            <returns>Retorna a Margem de Lucro calculada</returns>
        </member>
        <member name="M:Aula.Lib.Aula01.Exemplo01.CalcularPV_Markup(System.Decimal,System.Decimal)">
            <summary>
            CalcularPreçoDeVendaMarkup
            </summary>
            <param name="pc">Preço de Custo</param>
            <param name="mk">Markup</param>
            <returns>Retorna o preço de venda calculado através do Markup</returns>
        </member>
        <member name="M:Aula.Lib.Aula01.Exemplo01.CalcularPV_MargemDeLucro(System.Decimal,System.Decimal)">
            <summary>
            CalcularPreçoDeVendaMargemDeLucro
            </summary>
            <param name="pc">Preço de Custo</param>
            <param name="mlc">Margem de Lucro</param>
            <returns>Retorna o preço de venda calculado através da Margem de Lucro</returns>
        </member>
        <member name="T:Aula.Lib.Aula02.Exemplo02">
            <summary>
            Classe feita para testar o CPF
            </summary>
        </member>
        <member name="M:Aula.Lib.Aula02.Exemplo02.VerificarCPF(System.String)">
            <summary>
            VerificarCPF
            </summary>
            <param name="CPF">CPF da pessoa a ser verificado</param>
            <returns>Retorna se o CPF é válido ou não</returns>
        </member>
        <member name="M:Aula.Lib.Aula02.Exemplo02.AplicarMascaraCPF(System.String)">
            <summary>
            Aplicar Máscara ao CPF informado
            </summary>
            <param name="CPF"></param>
            <returns></returns>
        </member>
        <member name="T:Aula.Lib.Aula02.Models_DB.ClienteDB">
            <summary>
            Classe que representa o cliente no banco de dados
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.Models_DB.ClienteDB.Codigo">
            <summary>
            Código do Cliente
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.Models_DB.ClienteDB.Nome">
            <summary>
            Nome do Cliente
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.Models_DB.ClienteDB.CPF">
            <summary>
            CPF do cliente
            </summary>
        </member>
        <member name="T:Aula.Lib.Aula02.Models_DB.ProdutoDB">
            <summary>
            Model para representar o produto no banco de dados
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.Models_DB.ProdutoDB.Codigo">
            <summary>
            Código do Produto
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.Models_DB.ProdutoDB.Nome">
            <summary>
            Descrição do Produto
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.Models_DB.ProdutoDB.Custo">
            <summary>
            Preço de Custo do Produto
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.Models_DB.ProdutoDB.Venda">
            <summary>
            Preço de Venda do Produto
            </summary>
        </member>
        <member name="T:Aula.Lib.Aula02.OOP___Herança.Conta">
            <summary>
            Classe pai de Conta - https://www.caelum.com.br/apostila-csharp-orientacao-objetos/heranca#polimorfismo
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.OOP___Herança.Conta.Numero">
            <summary>
            Valor
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.OOP___Herança.Conta.Saldo">
            <summary>
            Saldo
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.OOP___Herança.Conta.ClienteTitular">
            <summary>
            CPF do titular
            </summary>
        </member>
        <member name="M:Aula.Lib.Aula02.OOP___Herança.Conta.Saca(System.Double)">
            <summary>
            Sacar
            </summary>
            <param name="valor"></param>
        </member>
        <member name="M:Aula.Lib.Aula02.OOP___Herança.Conta.Deposita(System.Double)">
            <summary>
            Depositar
            </summary>
            <param name="valor"></param>
        </member>
        <member name="T:Aula.Lib.Aula02.View.ClienteView">
            <summary>
            Classe para representar a view do cliente, herdando de ClienteDB
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.View.ClienteView.CPFValido">
            <summary>
            Validação de CPF
            </summary>
        </member>
        <member name="T:Aula.Lib.Aula02.View.ProdutoVendaView">
            <summary>
            Classe que representa o produto na venda, herdando dados da Model.
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.View.ProdutoVendaView.NCM">
            <summary>
            Classificação fiscal do produto
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.View.ProdutoVendaView.Qtde">
            <summary>
            Quantidade do item a ser vendida
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.View.ProdutoVendaView.Desconto">
            <summary>
            Desconto na venda do produto
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.View.ProdutoVendaView.SubTotal">
            <summary>
            Retorna o subtotal
            </summary>
        </member>
        <member name="T:Aula.Lib.Aula02.View.ProdutoView">
            <summary>
            View para produtos, herdando características da Model
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.View.ProdutoView.Margem">
            <summary>
            Representa a margem de lucro para o usuário com base no preço de custo e venda
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.View.ProdutoView.MargemDeLucro">
            <summary>
            Retorna a Margem de Lucro Calculado com Base no Preço de Custo e Preço de Venda
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.View.ProdutoView.MarkUp">
            <summary>
            Retorna o Markup Calculado com Base no Preço de Custo e Preço de Venda
            </summary>
        </member>
        <member name="T:Aula.Lib.Aula03.ClienteView2">
            <summary>
            View para Clientes
            </summary>
        </member>
        <member name="F:Aula.Lib.Aula03.ClienteView2.BancoClientes">
            <summary>
            Criação de um banco de clientes
            </summary>
        </member>
        <member name="M:Aula.Lib.Aula03.ClienteView2.TrazerCliente(System.Int32)">
            <summary>
            Carrega cliente de acordo com o código do cliente
            </summary>
            <param name="CodigoCliente">Código do Cliente</param>
            <returns>Retorna o cliente</returns>
        </member>
        <member name="M:Aula.Lib.Aula03.ClienteView2.RemoverCliente(System.Int32)">
            <summary>
            Remove Clientes
            </summary>
            <param name="v">Código do Cliente</param>
        </member>
        <member name="M:Aula.Lib.Aula03.ClienteView2.EditarCliente(System.Int32,System.String)">
            <summary>
            Editar Clientes
            </summary>
            <param name="v">Código do Cliente</param>
            <param name="Nome">Nome do Cliente</param>
        </member>
        <member name="M:Aula.Lib.Aula03.ClienteView2.TrazerClientes(System.Int32[])">
            <summary>
            Array para listar os clientes
            </summary>
            <param name="CodigoCliente">Código do Cliente</param>
            <returns>Retorna a listagem dos clientes</returns>
        </member>
        <member name="T:Aula.Lib.Aula03.Interfaces.ICliente">
            <summary>
            Interface para clientes
            </summary>
        </member>
        <member name="M:Aula.Lib.Aula03.Interfaces.ICliente.CarregaCliente(System.Int32)">
            <summary>
            Carrega clientes
            </summary>
            <param name="CodigoCliente">Código do Cliente</param>
            <returns>Cliente</returns>
        </member>
        <member name="M:Aula.Lib.Aula03.Interfaces.ICliente.RemoveCliente(System.Int32)">
             <summary>
            Remove cliente 
             </summary>
             <param name="CodigoCliente">Código do Cliente</param>
             <returns>Remove o cliente da lista</returns>
        </member>
        <member name="M:Aula.Lib.Aula03.Interfaces.ICliente.EditaCliente(System.Int32,System.String)">
            <summary>
            Edita Cliente
            </summary>
            <param name="CodigoCliente">Código do Cliente</param>
            <param name="Nome">Nome do Cliente</param>
            <returns>Edita o cliente da lista</returns>
        </member>
        <member name="T:Aula.Lib.Aula04.Enumeraveis">
            <summary>
            Classe de estudo - Enumeráveis
            </summary>
        </member>
        <member name="T:Aula.Lib.Aula04.ExercicioAula04">
            <summary>
            Exercícios Aula01
            </summary>
        </member>
        <member name="M:Aula.Lib.Aula04.ExercicioAula04.NumerosParesEntre(System.Int32,System.Int32)">
            <summary>
            Função para verificar números pares entre 2 valores
            </summary>
            <param name="Inicio">Início do período</param>
            <param name="Fim">Fim do período</param>
            <returns>Retorna números pares</returns>
        </member>
        <member name="M:Aula.Lib.Aula04.ExercicioAula04.NumerosMultiplo2e3Entre(System.Int32,System.Int32)">
            <summary>
            Função para retornar números múltiplos de 2 e 3
            </summary>
            <param name="Inicio">Início do período</param>
            <param name="Fim">Fim do período</param>
            <returns>Retorna números múltiplos entre 2 e 3</returns>
        </member>
    </members>
</doc>
