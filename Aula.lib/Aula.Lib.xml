<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Aula.Lib</name>
    </assembly>
    <members>
        <member name="T:Aula.Lib.Aula01.Exemplo01">
            <summary>
            Classe feita para aprender a calcular Margem de Lucro, Markup e Preço de Venda utilizando-se dos dois métodos de precificação anteriores
            </summary>
        </member>
        <member name="M:Aula.Lib.Aula01.Exemplo01.CalcularMarkup(System.Decimal,System.Decimal)">
            <summary>
            CalculaMarkup
            </summary>
            <param name="PC">Preço de Custo</param>
            <param name="PV">Preço de Venda</param>
            <returns>Retorna o Markup calculado</returns>
        </member>
        <member name="M:Aula.Lib.Aula01.Exemplo01.CalcularMargemDeLucro(System.Decimal,System.Decimal)">
            <summary>
            CalculaMargemDeLucro
            </summary>
            <param name="pc">Preço de Custo</param>
            <param name="pv">Preço de Venda</param>
            <returns>Retorna a Margem de Lucro calculada</returns>
        </member>
        <member name="M:Aula.Lib.Aula01.Exemplo01.CalcularPV_Markup(System.Decimal,System.Decimal)">
            <summary>
            CalcularPreçoDeVendaMarkup
            </summary>
            <param name="pc">Preço de Custo</param>
            <param name="mk">Markup</param>
            <returns>Retorna o preço de venda calculado através do Markup</returns>
        </member>
        <member name="M:Aula.Lib.Aula01.Exemplo01.CalcularPV_MargemDeLucro(System.Decimal,System.Decimal)">
            <summary>
            CalcularPreçoDeVendaMargemDeLucro
            </summary>
            <param name="pc">Preço de Custo</param>
            <param name="mlc">Margem de Lucro</param>
            <returns>Retorna o preço de venda calculado através da Margem de Lucro</returns>
        </member>
        <member name="T:Aula.Lib.Aula02.Exemplo02">
            <summary>
            Classe feita para testar o CPF
            </summary>
        </member>
        <member name="M:Aula.Lib.Aula02.Exemplo02.VerificarCPF(System.String)">
            <summary>
            VerificarCPF
            </summary>
            <param name="CPF">CPF da pessoa a ser verificado</param>
            <returns>Retorna se o CPF é válido ou não</returns>
        </member>
        <member name="M:Aula.Lib.Aula02.Exemplo02.AplicarMascaraCPF(System.String)">
            <summary>
            Aplicar Máscara ao CPF informado
            </summary>
            <param name="CPF"></param>
            <returns></returns>
        </member>
        <member name="T:Aula.Lib.Aula02.Models_DB.ClienteDB">
            <summary>
            Classe que representa o cliente no banco de dados
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.Models_DB.ClienteDB.Codigo">
            <summary>
            Código do Cliente
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.Models_DB.ClienteDB.Nome">
            <summary>
            Nome do Cliente
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.Models_DB.ClienteDB.CPF">
            <summary>
            CPF do cliente
            </summary>
        </member>
        <member name="T:Aula.Lib.Aula02.Models_DB.ProdutoDB">
            <summary>
            Model para representar o produto no banco de dados
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.Models_DB.ProdutoDB.Codigo">
            <summary>
            Código do Produto
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.Models_DB.ProdutoDB.Nome">
            <summary>
            Descrição do Produto
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.Models_DB.ProdutoDB.Custo">
            <summary>
            Preço de Custo do Produto
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.Models_DB.ProdutoDB.Venda">
            <summary>
            Preço de Venda do Produto
            </summary>
        </member>
        <member name="T:Aula.Lib.Aula02.OOP___Herança.Conta">
            <summary>
            Classe pai de Conta - https://www.caelum.com.br/apostila-csharp-orientacao-objetos/heranca#polimorfismo
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.OOP___Herança.Conta.Numero">
            <summary>
            Valor
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.OOP___Herança.Conta.Saldo">
            <summary>
            Saldo
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.OOP___Herança.Conta.ClienteTitular">
            <summary>
            CPF do titular
            </summary>
        </member>
        <member name="M:Aula.Lib.Aula02.OOP___Herança.Conta.Saca(System.Double)">
            <summary>
            Sacar
            </summary>
            <param name="valor"></param>
        </member>
        <member name="M:Aula.Lib.Aula02.OOP___Herança.Conta.Deposita(System.Double)">
            <summary>
            Depositar
            </summary>
            <param name="valor"></param>
        </member>
        <member name="T:Aula.Lib.Aula02.View.ClienteView">
            <summary>
            Classe para representar a view do cliente, herdando de ClienteDB
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.View.ClienteView.CPFValido">
            <summary>
            Validação de CPF
            </summary>
        </member>
        <member name="T:Aula.Lib.Aula02.View.ProdutoVendaView">
            <summary>
            Classe que representa o produto na venda, herdando dados da Model.
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.View.ProdutoVendaView.NCM">
            <summary>
            Classificação fiscal do produto
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.View.ProdutoVendaView.Qtde">
            <summary>
            Quantidade do item a ser vendida
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.View.ProdutoVendaView.Desconto">
            <summary>
            Desconto na venda do produto
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.View.ProdutoVendaView.SubTotal">
            <summary>
            Retorna o subtotal
            </summary>
        </member>
        <member name="T:Aula.Lib.Aula02.View.ProdutoView">
            <summary>
            View para produtos, herdando características da Model
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.View.ProdutoView.Margem">
            <summary>
            Representa a margem de lucro para o usuário com base no preço de custo e venda
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.View.ProdutoView.MargemDeLucro">
            <summary>
            Retorna a Margem de Lucro Calculado com Base no Preço de Custo e Preço de Venda
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula02.View.ProdutoView.MarkUp">
            <summary>
            Retorna o Markup Calculado com Base no Preço de Custo e Preço de Venda
            </summary>
        </member>
        <member name="T:Aula.Lib.Aula03.ClienteView2">
            <summary>
            View para Clientes
            </summary>
        </member>
        <member name="F:Aula.Lib.Aula03.ClienteView2.BancoClientes">
            <summary>
            Criação de um banco de clientes
            </summary>
        </member>
        <member name="M:Aula.Lib.Aula03.ClienteView2.TrazerCliente(System.Int32)">
            <summary>
            Carrega cliente de acordo com o código do cliente
            </summary>
            <param name="CodigoCliente">Código do Cliente</param>
            <returns>Retorna o cliente</returns>
        </member>
        <member name="M:Aula.Lib.Aula03.ClienteView2.RemoverCliente(System.Int32)">
            <summary>
            Remove Clientes
            </summary>
            <param name="v">Código do Cliente</param>
        </member>
        <member name="M:Aula.Lib.Aula03.ClienteView2.EditarCliente(System.Int32,System.String)">
            <summary>
            Editar Clientes
            </summary>
            <param name="v">Código do Cliente</param>
            <param name="Nome">Nome do Cliente</param>
        </member>
        <member name="M:Aula.Lib.Aula03.ClienteView2.TrazerClientes(System.Int32[])">
            <summary>
            Array para listar os clientes
            </summary>
            <param name="CodigoCliente">Código do Cliente</param>
            <returns>Retorna a listagem dos clientes</returns>
        </member>
        <member name="T:Aula.Lib.Aula03.Interfaces.ICliente">
            <summary>
            Interface para clientes
            </summary>
        </member>
        <member name="M:Aula.Lib.Aula03.Interfaces.ICliente.CarregaCliente(System.Int32)">
            <summary>
            Carrega clientes
            </summary>
            <param name="CodigoCliente">Código do Cliente</param>
            <returns>Cliente</returns>
        </member>
        <member name="M:Aula.Lib.Aula03.Interfaces.ICliente.RemoveCliente(System.Int32)">
             <summary>
            Remove cliente 
             </summary>
             <param name="CodigoCliente">Código do Cliente</param>
             <returns>Remove o cliente da lista</returns>
        </member>
        <member name="M:Aula.Lib.Aula03.Interfaces.ICliente.EditaCliente(System.Int32,System.String)">
            <summary>
            Edita Cliente
            </summary>
            <param name="CodigoCliente">Código do Cliente</param>
            <param name="Nome">Nome do Cliente</param>
            <returns>Edita o cliente da lista</returns>
        </member>
        <member name="T:Aula.Lib.Aula04.Enumeraveis">
            <summary>
            Classe de estudo - Enumeráveis
            </summary>
        </member>
        <member name="T:Aula.Lib.Aula04.ExercicioAula04">
            <summary>
            Exercícios Aula01
            </summary>
        </member>
        <member name="M:Aula.Lib.Aula04.ExercicioAula04.NumerosParesEntre(System.Int32,System.Int32)">
            <summary>
            Função para verificar números pares entre 2 valores
            </summary>
            <param name="Inicio">Início do período</param>
            <param name="Fim">Fim do período</param>
            <returns>Retorna números pares</returns>
        </member>
        <member name="M:Aula.Lib.Aula04.ExercicioAula04.NumerosMultiplo2e3Entre(System.Int32,System.Int32)">
            <summary>
            Função para retornar números múltiplos de 2 e 3
            </summary>
            <param name="Inicio">Início do período</param>
            <param name="Fim">Fim do período</param>
            <returns>Retorna números múltiplos entre 2 e 3</returns>
        </member>
        <member name="M:Aula.Lib.Aula04.ExercicioAula04.Fibonacci(System.Int32)">
            <summary>
            Calcula Fibonacci
            </summary>
            <param name="Quantidade">Quantidade de números</param>
            <returns>Retorna a quantidade de números calculados</returns>
        </member>
        <member name="T:Aula.Lib.Aula05.Comparacao">
            <summary>
            Classe para comparação de itens
            </summary>
        </member>
        <member name="M:Aula.Lib.Aula05.Comparacao.Ordenar(System.Int32[])">
            <summary>
            Ordenar itens
            </summary>
            <param name="Itens">Itens a serem ordenados</param>
            <returns>Retorna os itens ordenados</returns>
        </member>
        <member name="T:Aula.Lib.Aula06.E0.Item">
            <summary>
            Classe Item
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula06.E0.Item.ID">
            <summary>
            ID interno
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula06.E0.Item.Nome">
            <summary>
            Nome do Produto
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula06.E0.Item.Local">
            <summary>
            Local armazenagem
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula06.E0.Item.Patrimonio">
            <summary>
            Número Patrimônio
            </summary>
        </member>
        <member name="T:Aula.Lib.Aula06.E0.Item_View">
            <summary>
            View para Produto
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula06.E0.Item_View.DB">
            <summary>
            Variável SQLite
            </summary>
        </member>
        <member name="M:Aula.Lib.Aula06.E0.Item_View.Inserir(Aula.Lib.Aula06.E0.Item)">
            <summary>
            Grava o item no banco
            </summary>
            <param name="item">Código do item</param>
        </member>
        <member name="M:Aula.Lib.Aula06.E0.Item_View.BuscaPatrimonio(System.String)">
            <summary>
            Consulta por número de patrimônio
            </summary>
            <param name="Patrimonio">Número do patrimônio</param>
            <returns>Retorna o item através da consulta por número do patrimônio</returns>
        </member>
        <member name="M:Aula.Lib.Aula06.E0.Item_View.TrazACambada">
            <summary>
            Busca todos os itens
            </summary>
            <returns>Retorna todos os itens</returns>
        </member>
        <member name="M:Aula.Lib.Aula06.E0.Item_View.Setup">
            <summary>
            Configuração Banco de dados
            </summary>
        </member>
        <member name="T:Aula.Lib.Aula06.E0.UI">
            <summary>
            Interface do usuário
            </summary>
        </member>
        <member name="M:Aula.Lib.Aula06.E0.UI.RUN">
            <summary>
            Start do sistema
            </summary>
        </member>
        <member name="T:Aula.Lib.Aula06.E1.Ticket">
            <summary>
            Model do ticket
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula06.E1.Ticket.ID">
            <summary>
            ID interno do ticket
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula06.E1.Ticket.Assunto">
            <summary>
            Assunto do ticket
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula06.E1.Ticket.DataAbertura">
            <summary>
            Data de Abertura do ticket
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula06.E1.Ticket.Tipo">
            <summary>
            Tipo (Bug ou Sugestão)
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula06.E1.Ticket.Responsavel">
            <summary>
            Responsável pela abertura do chamado
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula06.E1.Ticket.VersaoAfetada">
            <summary>
            Versão do software afetada
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula06.E1.Ticket.Finalizado">
            <summary>
            Finalizado ou não
            </summary>
        </member>
        <member name="T:Aula.Lib.Aula06.E1.TicketHist">
            <summary>
            Model dos históricos do ticket
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula06.E1.TicketHist.ID">
            <summary>
            ID interno do histórico
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula06.E1.TicketHist.ID_Ticket">
            <summary>
            ID do ticket
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula06.E1.TicketHist.Texto">
            <summary>
            Ocorrência registrada
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula06.E1.TicketHist.DataHoraAlteracao">
            <summary>
            Data e hora da inserção da alteração
            </summary>
        </member>
        <member name="T:Aula.Lib.Aula06.E1.Ticket_View">
            <summary>
            View do ticket
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula06.E1.Ticket_View.DB">
            <summary>
            Variável SQLite
            </summary>
        </member>
        <member name="M:Aula.Lib.Aula06.E1.Ticket_View.NovoTicket(Aula.Lib.Aula06.E1.Ticket)">
            <summary>
            Gravação do cabeçalho do ticket
            </summary>
            <param name="ticket">Informações do cabeçalho do ticket</param>
        </member>
        <member name="M:Aula.Lib.Aula06.E1.Ticket_View.NovaAtualizacao(Aula.Lib.Aula06.E1.TicketHist)">
            <summary>
            Inserçaõ do histórico do ticket
            </summary>
            <param name="tickethist">Informações do histórico do ticket</param>
        </member>
        <member name="M:Aula.Lib.Aula06.E1.Ticket_View.BuscarTicket(System.String)">
            <summary>
            Consultar ticket
            </summary>
            <param name="ID">ID do ticket</param>
            <returns>Retorna o ticket cadastrado</returns>
        </member>
        <member name="M:Aula.Lib.Aula06.E1.Ticket_View.CarregarTodosOsTickets">
            <summary>
            Retorna todos os tickets
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aula.Lib.Aula06.E1.Ticket_View.CarregarHistorico(System.String)">
            <summary>
            Consultar os históricos dos tickets
            </summary>
            <param name="ID">ID do Ticket</param>
            <returns>Retorna todos os históricos dos tickets tickets</returns>
        </member>
        <member name="M:Aula.Lib.Aula06.E1.Ticket_View.Setup">
            <summary>
            Configuração do Banco de Dados
            </summary>
        </member>
        <member name="M:Aula.Lib.Aula06.E1.Ticket_View.BackupDB">
            <summary>
            Realiza uma cópia do banco de dados
            </summary>
        </member>
        <member name="T:Aula.Lib.Aula06.E1.Tipo_Ticket">
            <summary>
            Tipo do ticket a ser aberto (0 - BUG/1 - SUGESTÃO)
            </summary>
        </member>
        <member name="F:Aula.Lib.Aula06.E1.Tipo_Ticket.VAZIO">
            <summary>
            TipoTicket não informado
            </summary>
        </member>
        <member name="F:Aula.Lib.Aula06.E1.Tipo_Ticket.BUG">
            <summary>
            Bug
            </summary>
        </member>
        <member name="F:Aula.Lib.Aula06.E1.Tipo_Ticket.SUGESTAO">
            <summary>
            Sugestão
            </summary>
        </member>
        <member name="T:Aula.Lib.Aula06.E1.UI">
            <summary>
            Interface do Usuário
            </summary>
        </member>
        <member name="P:Aula.Lib.Aula06.E1.UI.DB">
            <summary>
            Variável do SQLite
            </summary>
        </member>
        <member name="M:Aula.Lib.Aula06.E1.UI.Inicializar">
            <summary>
            Inicializar sistema
            </summary>
        </member>
    </members>
</doc>
